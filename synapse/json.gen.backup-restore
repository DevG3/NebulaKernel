#!/system/bin/sh

cat << CTAG
{
    name:BACKUP RESTORE,
    elements:[
    	{ STitleBar:{
			title:"Profiles"
		}},
			{ SOptionList:{
				title:"Selected Profile",
				description:"Choose the settings you want and apply your choice in Synapse before using the action buttons below.",
				action:"restorebackup pickprofile",
				default:"None",
				values:[ "None",
					`for BAK in \`$UKM/actions/restorebackup listprofile\`; do
						echo "\"$BAK\","
					done`
				],
				notify:[
					{
						on:APPLY,
						do:[ REFRESH, APPLY ],
						to:"generic $UKM/files/bck_prof"
					}
				]
			}},
			{ SDescription:{
				description:"NOTE: After you restore a profile, you have to press the X button on top to load the settings."
			}},
			{ SButton:{
				label:"Restore Selected Profile",
				action:"restorebackup applyprofile",
				notify:[
					{
						on:APPLY,
						do:[ REFRESH, APPLY ],
						to:"restorebackup pickprofile"
					}
				]
			}},
			{ SButton:{
				label:"Delete Selected Profile",
				action:"restorebackup delprofile",
				notify:[
					{
						on:APPLY,
						do:[ REFRESH, APPLY ],
						to:"restorebackup pickprofile"
					}
				]
			}},
		{ SPane:{
			title:"Configs"
		}},
			{ SOptionList:{
				title:"Selected Config",
				description:"Choose the settings you want and apply your choice in Synapse before using the action buttons below.",
				action:"restorebackup pickconfig",
				default:"None",
				values:[ "None",
					`for BAK in \`$UKM/actions/restorebackup listconfig\`; do
						echo "\"$BAK\","
					done`
				],
				notify:[
					{
						on:APPLY,
						do:[ REFRESH, APPLY ],
						to:"generic $UKM/files/bck_prof"
					}
				]
			}},
			{ SDescription:{
				description:"NOTE: After you restore a config, you have to press the X button on top to load the settings."
			}},
			{ SButton:{
				label:"Import Selected Config",
				action:"sqlite ImportConfigSynapse",
				notify:[
					{
						on:APPLY,
						do:[ REFRESH, APPLY ],
						to:"restorebackup pickconfig"
					}
				]
			}},
			{ SButton:{
				label:"Delete Selected Config",
				action:"restorebackup delconfig",
				notify:[
					{
						on:APPLY,
						do:[ REFRESH, APPLY ],
						to:"restorebackup pickconfig"
					}
				]
			}},
		{ SPane:{
			title:"Backup Actions"
		}},
			{ SGeneric:{
				title:"Profile/Config Name",
				default:"None",
				action:"generic $UKM/files/bck_prof",
			}},
			{ SDescription:{
				description:"First set a name above and apply. After this you can press the Backup Current Profile or Export Current Config button below."
			}},
			{ SButton:{
				label:"Backup Current Profile",
				action:"restorebackup keepprofile",
				notify:[
					{
						on:APPLY,
						do:[ REFRESH, APPLY ],
						to:"generic $UKM/files/bck_prof"
					}
				]
			}},
			{ SButton:{
				label:"Export Current Config",
				action:"sqlite ExportConfigSynapse",
				notify:[
					{
						on:APPLY,
						do:[ REFRESH, APPLY ],
						to:"generic $UKM/files/bck_prof"
					}
				]
			}},
		{ SPane:{
			title:"General Actions",
			description:"To update/refresh lists, select Restart Synapse below."
		}},
			{ SButton:{
				label:"Restart Synapse",
				action:"restorebackup restart"
			}},
	{ STitleBar:{
		title:"Kernel Image"
	}},
	{ SDescription:{
		description:""
	}},
	{ SOptionList:{
		title:"Selected Image",
        description:" Choose the image you want. APPLY & REBOOT.",
		action:"restorebackup pickboot",
        default:"None",
		values:[ "None",
`
			for IMG in \`$UKM/actions/restorebackup listboot\`; do
			  echo "\"$IMG\","
			done
`
		]
	}},
	{ SDescription:{
		description:""
	}},
    { STitleBar:{
		title:"Kernel Actions",
    }},
	{ SDescription:{
		description:""
	}},
    { SButton:{
		label:"Restore Selected Kernel",
		action:"restorebackup flashboot /dev/block/platform/msm_sdcc.1/by-name/BOOT"
	}},
	{ SDescription:{
		description:""
	}},
    { SButton:{
		label:"Delete Selected Kernel",
		action:"restorebackup delboot"
	}},
	{ SDescription:{
		description:""
	}},
	{ SButton:{
		label:"Backup Current Kernel",
		action:"restorebackup keepboot /dev/block/platform/msm_sdcc.1/by-name/BOOT"
	}},
	{ SDescription:{
		description:""
	}},
	{ STitleBar:{
		title:"Configuration Profiles"
	}},
	{ SDescription:{
		description:""
	}},
	{ SOptionList:{
		title:"Selected Profile",
        description:" Choose the settings backup you want. APPLY & REBOOT.",
		action:"restorebackup pickconfig",
        default:"None",
		values:[ "None",
`
			for BAK in \`$UKM/actions/restorebackup listconfig\`; do
			  echo "\"$BAK\","
			done
`
		]
	}},
	{ SDescription:{
		description:""
	}},
	{ STitleBar:{
		title:"Settings Actions",
   	}},
	{ SDescription:{
		description:""
	}},
    	{ SButton:{
		label:"Restore Selected Profile",
		action:"restorebackup applyconfig"
	}},
	{ SDescription:{
		description:""
	}},
    	{ SButton:{
		label:"Delete Selected Profile",
		action:"restorebackup delconfig"
	}},
	{ SDescription:{
		description:""
	}},
	{ SButton:{
		label:"Backup Current Profile",
		action:"restorebackup keepconfig"
	}},
	{ SDescription:{
		description:" "
	}},
	{ SPane:{
		title:"About this tab",
		description:"\n\tVarious shortcuts for common tasks.\n\n"
        }},
        { SPane:{
		title:"Synapse Backup",
		description:"\n\tBacks up current Synapse settings to internal storage (/sdcard/Aurora_Kernel/backup_synapse). This means it will persist between ROMs, assuming you don't wipe your internal storage.\n\n"
        }},
        { SLiveLabel:{
			title:"Last Synapse Backup",
			refresh:1000,
			action:"
			if [ -f /sdcard/Aurora_Kernel/backup_synapse/actionValueStore ]; then
				echo \$(busybox date -r /sdcard/Aurora_Kernel/backup_synapse/actionValueStore '+%a, %B %e @ %I:%M %p');
			else
				echo No backup found;
			fi;
			"
		}},
		{ SDescription:{
		   description:""
		}},
		{ SButton:{
			label:"Backup Synapse",
			action:"
			if [ -d /sdcard/Aurora_Kernel/backup_synapse ]; then
				cp /data/data/com.af.synapse/databases/* /sdcard/Aurora_Kernel/backup_synapse/;
				echo Backed Up!;
			else
				echo Backup directory missing...creating...
				mkdir -p /sdcard/Aurora_Kernel/backup_synapse;
				if [ -d /data/media/0/Aurora_Kernel/backup_synapse ]; then
					cp /data/data/com.af.synapse/databases/* /sdcard/Aurora_Kernel/backup_synapse;
					echo backed up!;
				else
					echo failed!;
				fi;
			fi;
			"
		}},
		{ SDescription:{
		   description:""
		}},
		{ SButton:{
			label:"Restore & Close Synapse",
			action:"
			if [ -f /sdcard/Aurora_Kernel/backup_synapse/actionValueStore ]; then
				rm -f /data/data/com.af.synapse/databases/actionValueStore*;
				cp /sdcard/Aurora_Kernel/backup_synapse/actionValueStore* /data/data/com.af.synapse/databases/;
				chmod 666 /data/data/com.af.synapse/databases/*;
				pkill -f synapse;
			else
				echo No backup found!;
			fi;
			"
		}},
		{ SDescription:{
		   description:""
		}},
		{ SButton:{
			label:"Reset & Close Synapse",
			action:"
			rm -f /data/data/com.af.synapse/databases/actionValueStore*;
			echo Reset, now restarting Synapse!;
			pkill -f synapse;";
		}},
		{ SDescription:{
		   description:"\n"
		}},
		{ SPane:{
		title:"Filesystem Controls",
		description:""
        }},
		{ SButton:{
			label:"Remount /system as Writeable",
			action:"mount -o remount,rw \/system;
			echo Remounted \/system as Writable!;"
		}},
		{ SDescription:{
		   description:""
		}},
		{ SButton:{
			label:"Remount /system as Read-Only",
			action:"mount -o remount,ro \/system;
			echo Remounted \/system as Read-Only!;"
		}},
		{ SDescription:{
		   description:""
		}},
		{ SButton:{
			label:"Remount RootFS as Writeable",
			action:"/sbin/busybox mount -t rootfs -o remount,rw rootfs;
			echo Remounted RootFS as Writable!;"
		}},
		{ SDescription:{
		   description:""
		}},
		{ SButton:{
			label:"Remount RootFS as Read-Only",
			action:"/sbin/busybox mount -t rootfs -o remount,ro rootfs;
			echo Remounted RootFS as Read-Only!;"
		}},
		{ SDescription:{
		   description:"\n"
		}},
	{ SLiveLabel:{
		refresh:10000000,
		title:"Filesystem of /cache Partition",
		style:"normal",
		action:"
		if grep -q 'cache f2fs' /proc/mounts ; then
			echo F2FS;
		else
			echo EXT4;
		fi;"
	}},
	{ SSpacer:{
	   height:1
	}},
	{ SLiveLabel:{
		refresh:10000000,
		title:"Filesystem of /data Partition",
		style:"normal",
		action:"
		if grep -q 'data f2fs' /proc/mounts ; then
			echo F2FS;
		else
			echo EXT4;
		fi;"
	}},
	{ SSpacer:{
	   height:1
	}},
	{ SLiveLabel:{
		refresh:10000000,
		title:"Filesystem of /system Partition",
		style:"normal",
		action:"
		if grep -q 'system f2fs' /proc/mounts ; then
			echo F2FS;
		else
			echo EXT4;
		fi;"
	}},
	{ SSpacer:{
	   height:1
	}},
    ]
}
CTAG
